{"version":3,"sources":["constants/Constants.js","common/utils.js","containers/fromServer.js","components/CwCell/CwCell.js","components/CwGrid/CwGrid.js","components/CwList/CwList.js","components/CwTheme/CwTheme.js","components/CwToolPanel/CwToolPanel.js","containers/Crossword.js","App.js","serviceWorker.js","index.js"],"names":["NUMCELLS","CW_URL","loadCW","url","params","callback","err","fetch","method","cache","headers","Content-Type","body","JSON","stringify","then","res","ok","Error","status","statusText","json","catch","e","console","log","fromServer","WrappedComponent","_React$Component","_temp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","convJSONtoMap","jsonData","charMap","Map","defItems","obj","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","cw","a","Symbol","iterator","next","done","acItems","value","_acItems$c$split","c","split","_acItems$c$split2","slicedToArray","xc","yc","wordArr","toConsumableArray","w","incre","length","set","push","d","o","l","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","dwItems","_dwItems$c$split","_dwItems$c$split2","setState","state","workingMap","hasLoadFailed","currIndex","onChange","coord","val","map1","map2","size","_ref3","_ref2","key","get","toUpperCase","matchMaps","isSolved","onClick","clickedCell","onLoadErr","onSubmit","resetState","constants","theme","count","onThemeChange","target","onSolveClick","inherits","createClass","_this2","react_default","createElement","x","y","React","Component","CwCell","styles","isSelected","backgroundColor","handleClick","bind","className","style","assign","name","maxLength","type","charValue","handleChange","showCoord","htmlFor","PureComponent","CwGrid","renderCell","selectedItems","includes","components_CwCell_CwCell","find","item","renderGrid","grid","objects","filter","_clickedCell$split","_clickedCell$split2","i","_clickedCell$split3","_clickedCell$split4","j","children","nextProps","nextState","CwList","CwTheme","handleSubmit","assertThisInitialized","preventDefault","alert","CwToolPanel","onClueClick","clueValue","components_CwTheme_CwTheme","components_CwGrid_CwGrid","components_CwList_CwList","components_CwToolPanel_CwToolPanel","Footer","href","App","Crossword","App_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3b67162.chunk.js","sourcesContent":["export const NUMCELLS = 12\nexport const CW_URL = \"https://sheltered-fjord-20698.herokuapp.com/ceftchyui\"\n// export const CW_URL = \"http://localhost:8080/ceftchyui\"\n\n","\n\nexport function matchMaps(map1, map2) {\n    let tempVal;\n    if (map1.size !== map2.size) {\n        return false;\n    }\n    for (let [key, val] of map1) {\n        tempVal = map2.get(key);\n        if (tempVal.toUpperCase() !== val.toUpperCase()) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport const loadCW = (url, params, callback, err) => {\n\n    fetch(url, {\n      method: 'POST',\n      cache: 'no-cache',\n      headers: { 'Content-Type':'application/json' },\n      body: JSON.stringify(params),\n    })\n    .then(res =>\n        {\n            if (!res.ok) {\n                throw Error(res.status + '; ' + res.statusText)\n            }\n            return res.json() \n        })\n    .then(res => {\n            callback(res)\n        })\n    .catch(e => {\n        err(e)\n        console.log('in load crossword catch error -' + e)\n    })\n\n}\n\n","import React from 'react';\n//import axios from 'axios';\nimport * as constants from '../constants/Constants.js'\nimport {loadCW, matchMaps} from '../common/utils'\n\nconst fromServer = (WrappedComponent, url) => {\n\n    {/* HOC container which houses all the data fetching, manipulation and consolidates state processing.\n        It calls on lower layers of presentational components to render the crossword\n    */}\n    return class extends React.Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                charMap: null,\n                workingMap: null,\n                theme:'G',\n                clickedCell: null,\n                defItems: null,\n                isSolved: false,\n                currIndex: 0,\n                hasLoadFailed: false,\n            };\n        }\n\n        componentDidMount() {\n            // Please note that CORS for all has been enabled at node REST API server level\n            // do NOT use no-cors header in request here! Opaque requests screws up the json!\n            loadCW(constants.CW_URL,  { theme: 'G', count: 0 } , this.convJSONtoMap, this.onLoadErr)\n        }\n\n        convJSONtoMap = (jsonData) => {\n            \n            let charMap= new Map();\n            let defItems = [];\n            let obj=jsonData;\n            for (let acItems of obj.cw.a)\n            {\n                let [xc, yc] = acItems.c.split(\"-\");\n                let wordArr = [...acItems.w];\n                for (let incre = 0; incre < acItems.w.length;incre++)\n                {\n                    charMap.set(xc+\"-\"+(+yc+incre),wordArr[incre] );\n                }\n                defItems.push({ 'c' : acItems.c, 'd': acItems.d, 'o': 'a', 'l': acItems.w.length});\n            }\n            for (let dwItems of obj.cw.d)\n            {\n                let [xc, yc] = dwItems.c.split(\"-\");\n                let wordArr = [...dwItems.w];\n                for (let incre = 0; incre < dwItems.w.length;incre++)\n                {\n                    charMap.set((+xc+incre)+\"-\"+yc,wordArr[incre] );\n                }\n                defItems.push({ 'c' : dwItems.c,  'd': dwItems.d, 'o': 'd', 'l': dwItems.w.length});\n            }\n\n            this.setState ((state) => (\n                {\n                    charMap : charMap,\n                    workingMap : new Map(),\n                    defItems: defItems,\n                    hasLoadFailed: false,\n                    currIndex: ++state.currIndex,\n                })\n            )\n        }\n    \n        onChange = (coord, val) => {\n            let workingMap = this.state.workingMap\n            workingMap.set(coord,val)\n            this.setState({\n                workingMap: workingMap\n                }\n            )\n            if (matchMaps(this.state.charMap, this.state.workingMap))\n                this.setState( {\n                    isSolved: true }\n                )\n            else    \n                this.setState( {\n                    isSolved: false }\n                )\n        }\n\n\n        onClick = (coord) => {\n            this.setState ({\n                clickedCell : coord\n            })\n        }\n\n        onLoadErr = (err) => {\n            this.setState (\n            {\n                hasLoadFailed : true,\n            })\n        }\n\n        onSubmit = () => {\n            this.resetState()\n            loadCW(constants.CW_URL, { theme : this.state.theme, count : this.state.currIndex }, this.convJSONtoMap, this.onLoadErr)\n        }\n\n        onThemeChange = (e) => {\n            let theme = e.target.value\n            this.setState ({\n                theme : theme\n            })\n        }\n\n        onSolveClick = () => {\n            this.setState ({\n                isSolved : true\n            })\n        }\n\n        resetState = () => {\n            this.setState((state) => ({\n                charMap: null,  \n                workingMap: null,\n                clickedCell: null,\n                defItems: null,\n                isSolved: false,\n                hasLoadFailed : false,\n            }));\n        }\n\n        render() {\n\n            return (this.state.charMap) ? \n                    <WrappedComponent \n                    charMap={this.state.charMap} \n                    defItems={this.state.defItems} \n                    clickedCell={this.state.clickedCell}\n                    isSolved={this.state.isSolved} \n                    theme={this.state.theme} \n                    currIndex={this.state.currIndex}\n                    onThemeChange={this.onThemeChange} \n                    onSubmit={this.onSubmit} \n                    onChange={(x,y) => this.onChange(x,y)} \n                    onClick={(x) => this.onClick(x)} \n                    onSolveClick={this.onSolveClick}/>\n                    : <div> {!this.state.hasLoadFailed ? <h3>Loading.....</h3> : <p> Sorry...There was an error in fetching crossword from server</p>} </div>;\n        }\n    }\n\n}\n\n\nexport default fromServer","import React, { PureComponent } from 'react';\nimport  './style.css';\n\n{/* CwCell is the most frequently invoked component in parent render and can be optimized much better as a React.Component and\n    implementing shouldComponentUpdate directly instead of leaving it to PureComponent which does shallow compare.   \n    Kept it simple for now for code comprehension. Will be optimized in later version.\n*/}\nclass CwCell extends PureComponent\n{\n\n    handleChange(e) {\n        this.props.onChange(this.props.coord, e.target.value)\n    }\n\n    handleClick(coord, e)\n    {\n        this.props.onClick(coord)\n    }\n\n    render() {\n\n        {/* Not desirable - gives a 'component is changing an uncontrolled input to be controlled' warning.\n        Since this is only done at the final stage of crossword lifecycle i.e. at solve stage, have chosen this quick fix as a\n        tradeoff between prop optimization against proper implementation.\n        */}\n        let styles = (this.props.isSelected) ? { backgroundColor : '#84B198' } : {} ;\n        let cwCell = this.props.coord !== undefined ? \n                <div onClick={this.handleClick.bind(this,this.props.coord)} className=\"enabled-cell\" style={styles}> <input  name={this.props.coord} maxLength=\"1\" type=\"text\" style={{backgroundColor:'inherit'}} {...this.props.charValue == undefined && {onChange : this.handleChange.bind(this)}} {...this.props.charValue !== undefined && {value : this.props.charValue}}></input> { this.props.showCoord && <label htmlFor={this.props.coord} style={{backgroundColor:'inherit'}}> <sup>{this.props.coord}</sup> </label> } </div> \n                : <div className=\"disabled-cell\"> </div>    ;\n        return cwCell;\n    }\n}\n\nexport default CwCell;","import React from 'react'\nimport { CwCell } from '../CwCell'\nimport * as constants from '../../constants/Constants.js'\nimport  './style.css'\n\n\nclass CwGrid extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n        // to be implemented. Grid should not be rendered when Theme is changed. \n        // Besides there are optimizations to be done to mitigate redundant processing due to prop drilling.\n        return true;\n    }\n\n    renderCell = (x,y,selectedItems) => {\n\n        let coord = x+\"-\"+y\n        let isSelected = (selectedItems.length && selectedItems.includes(coord)) ? true : false ;\n        let charValue = this.props.isSolved ?  this.props.charMap.get(coord) : undefined\n        let cellDiv = (this.props.charMap.get(coord) !== undefined) ? \n                    <CwCell key={coord} coord={coord} showCoord={ this.props.defItems.find(item => item.c === coord) !== undefined ? true : false } isSelected={isSelected} onChange={this.props.onChange} onClick={this.props.onClick} charValue={charValue}></CwCell> \n                    : <CwCell key={coord}></CwCell>\n\n        return cellDiv;\n    }\n\n\n    renderGrid = () =>\n    {\n        let grid=[]\n        let clickedCell=this.props.clickedCell\n        let selectedItems = []\n        if (clickedCell != null)\n        {\n            let objects = this.props.defItems.filter( item => item.c === clickedCell )\n            for (let obj of objects ) {\n                let orientation = obj.o\n                if (orientation === 'a')\n                {\n                    let [xc,yc] = clickedCell.split(\"-\");\n                    for (let i=0; i < obj.l; i++)\n                    {\n                        selectedItems.push(xc+\"-\"+yc++);\n                    }\n                }\n                else {\n                    let [xc,yc] = clickedCell.split(\"-\");\n                    for (let j=0; j< obj.l; j++)\n                    {\n                        selectedItems.push(xc++ + \"-\" + yc);\n                    }\n                }\n            }\n        }\n\n        for (let i = 1; i <= constants.NUMCELLS; i++)\n        {\n            let children=[]\n            for (let j = 1; j <= constants.NUMCELLS; j++)\n                children.push(this.renderCell(i,j,selectedItems))\n            grid.push(<div key={i} className=\"cw-row\">{children}</div>)\n        }\n        \n        return <div className=\"column\">{grid}</div>\n    }\n\n    render ()\n    {\n        return this.renderGrid();\n    }\n}\n\nexport default CwGrid;","import React from 'react'\nimport  './style.css'\n\n\nclass CwList extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick(coord, e)\n    {\n        this.props.onClick(coord)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n        if (this.props.clickedCell !== nextProps.clickedCell)\n            return true;\n        if (this.props.defItems !== nextProps.defItems)\n            return true;\n        return false;\n    }\n\n\n    render() {\n\n        let defItems = this.props.defItems\n        let acItems=[], dwItems = []\n        for (let item of defItems) {\n\n            let styles = (this.props.clickedCell === item.c) ? { backgroundColor : '#84B198'} : {} ;\n            (item.o === 'a') ? acItems.push(<dd key={item.c} style = {styles} onClick={this.handleClick.bind(this,item.c)}> {item.c + ' (' + item.l + '): ' + item.d} </dd>) : dwItems.push(<dd key={item.c} style = {styles} onClick={this.handleClick.bind(this,item.c)}> {item.c + ' (' + item.l + '): ' + item.d} </dd>)\n        }\n        return  <div className=\"column\"><dl className=\"listtext\"><dt>Across</dt>{acItems}<dt>Down</dt>{dwItems}</dl></div>;\n    }\n\n}\n\nexport default CwList;","import React, { PureComponent } from 'react';\nimport './style.css'\nimport '../../App.css';\n\n\nclass CwTheme extends PureComponent {\n\n    constructor (props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        if (this.props.currIndex == 4)\n            alert('Sorry, a maximum of 5 crosswords can be fetched for a day.')\n        else\n            this.props.onSubmit()\n    }\n\n    render () {\n\n        return  <form  className=\"theme-form\" onSubmit={this.handleSubmit}>\n                <label className=\"theme-item theme-label\"> Theme </label>\n                <select className=\"select-css\" value={this.props.theme} onChange={this.props.onThemeChange}>\n                    <option value=\"G\">General</option>\n                    <option value=\"P\">Psychology</option>\n                    <option value=\"L\">Legal</option>\n                </select>\n                <input className=\"theme-item button buttondarklarge\" type=\"submit\" value=\"Get Crossword\"></input>\n            </form>;\n    }\n\n}\n\nexport default CwTheme;","import React, { PureComponent } from 'react';\nimport './style.css';\nimport '../../App.css';\n\n\nclass CwToolPanel extends PureComponent {\n\n    constructor (props) {\n        super(props);\n    }\n\n    // TBD: Implement a professional looking modal dialog here using local state \n    onClueClick = () => {\n        if (this.props.clueValue == ' ')\n            alert('Value of cell you last clicked is Spacebar' )\n        else if (this.props.clueValue === undefined)\n            alert('You have not clicked on any crossword cell yet.')\n        else\n            alert('Value of cell you last clicked is ' + this.props.clueValue)\n    }\n\n\n    render () {\n        return  <div className=\"tool-bar\">\n                    <div className=\"button buttongraysmall tool-item\" onClick={this.onClueClick}>Clue</div>\n                    <div className=\"button buttongraysmall tool-item\" onClick={this.props.onSolveClick}>Solve</div>\n                </div>;\n    }\n\n}\n\nexport default CwToolPanel;","import React from 'react'\nimport fromServer from './fromServer'\nimport { CwGrid } from '../components/CwGrid'\nimport { CwList } from '../components/CwList'\nimport { CwTheme } from '../components/CwTheme'\nimport { CwToolPanel } from '../components/CwToolPanel';\nimport '../App.css';\n\nconst CrossWord = (props) => {\n\n    return (\n        <div className=\"crossword\"> \n            <CwTheme onSubmit={props.onSubmit} onThemeChange={props.onThemeChange} theme={props.theme} currIndex={props.currIndex}/>\n            <CwGrid {...props}/>\n            <CwList defItems={props.defItems} onClick={props.onClick} clickedCell={props.clickedCell}></CwList>\n            <CwToolPanel clueValue={props.charMap.get(props.clickedCell)} onSolveClick={props.onSolveClick}/>\n            <div className=\"checkSolved\">{props.isSolved && <span> <h1>&#10003;</h1>  </span>}</div>\n        </div>\n    );\n\n}\n\nexport default fromServer(CrossWord);\n","import React from 'react';\nimport './App.css';\nimport Crossword from './containers/Crossword';\n\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <p>a barebones Crossword built with React by\n    <a href=\"http://www.disruptive-dna.com\"> disruptiveDNA </a>\n    Please see \n    <a href=\"http://www.disruptive-dna.com/tos/CrosswordTOS.html\"> Terms of Service </a>\n    </p>\n  </footer>\n);\n\nfunction App() {\n  return (\n    <div>\n      <Crossword></Crossword>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}